import("rtt_rospack")

// The magic utility script
runScript(ros.find("lwr_utils")+"/scripts/utils.ops")

// Load the robot (<name>, <is sim> ,<start component>)
loadRobot(getRobotName(), isSim(), true)

// Start the state publisher (<start component>)
loadStatePublisher(true)

// Set initial robot configuration: Default is candle pose
if (isSim()) then
  // Navigation Pose
  //setRobotInitialJointConfiguration(1.0, 0.0, 0.0, -1.57, 0.0, 1.57, 0.0)
  // Semi Candle Pose
  //setRobotInitialJointConfiguration(0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0)
  // Folded Pose
  //setRobotInitialJointConfiguration(-1.1572, -1.9104, -2.5334, -1.7853, -0.0727, 0.9176, -1.88766)
  
  // Table Pose
  setRobotInitialJointConfiguration(1.121303, 0.664983, -0.135893, -2.19962, 1.642697, 0.123156, 0.0108722)
  
  
  // Table Pose 2
  //setRobotInitialJointConfiguration(0.870617, 0.620455, 0.0204834, -2.10655, -0.0290253, 0.451482, 0.021415)
  // Down Pose
  //setRobotInitialJointConfiguration(2.96, 1.01597, -0.00247816, 3.09441, 0.00712046, 0.7, 0.0185914)
  // Up Pose 2
  //setRobotInitialJointConfiguration(2.96706, 1.02312, -0.131436, 1.612, 0.221282, 0.177134, 0.0155614)
  // Candle 2 Pose
  //setRobotInitialJointConfiguration(2.96004, 0.236575, 0.012681, 0.810056, 0.00639899, 2.09441, -1.81095)

// On the real robot, you have to set the mode manually. In simulation, JointImpedance is selected by default at the end of the loadRobot()
setJointTorqueControlMode()
//setJointPositionControlMode()
//setJointImpedanceControlMode()

//os.execute("sleep 3") // wait for gazebo to load completely

// Load and start the controller
import("rtt_ros")

// This will load all the dependencies in packages.xml <export><rtt_ros>
ros.import("lwr_rtt_control")

loadComponent("lwr_rtt_control", "LwrRttControl")
setActivity("lwr_rtt_control", 0.001287301587, 60, ORO_SCHED_RT)

connectPeers("lwr_rtt_control", getRobotName())

// Connects corresponding ports from your controller to the robot component
connectStandardPorts(getRobotName(), "lwr_rtt_control", ConnPolicy())
connectToAtiFTSensorPort("lwr_rtt_control", "ExtCartForce", ConnPolicy())

configureComponent("lwr_rtt_control")

startComponent("lwr_rtt_control")

//print.ln("\n\n\x1B[32mYou can change the robot control modes using the krl_tool\x1B[0m\n")

