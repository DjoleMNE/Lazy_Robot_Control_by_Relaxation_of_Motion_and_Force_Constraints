import("rtt_rospack")

# The magic utility script
runScript(ros.find("lwr_utils")+"/scripts/utils.ops")

# Load the robot (<name>, <is sim> ,<start component>)
loadRobot(getRobotName(), isSim(), true)

# Start the state publisher (<start component>)
loadStatePublisher(true)

// Set initial robot configuration
if (isSim()) then
  #setRobotInitialJointConfiguration(1.0, 0.0, 0.0, -1.57, 0.0, 1.57, 0.0)

# On the real robot, you have to set the mode manually
# In simulation, JointImpedance is selected by default at the end of the loadRobot()
#setJointPositionControlMode()
setJointTorqueControlMode()
#setJointImpedanceControlMode()

# Load and start the controller
import("rtt_ros")

# This will load all the dependencies in packages.xml <export><rtt_ros>
ros.import("lwr_rtt_control")

loadComponent("lwr_rtt_control", "LwrRttControl")
setActivity("lwr_rtt_control", 0.0011, 50, ORO_SCHED_RT)

connectPeers("lwr_rtt_control", getRobotName())

# Connects corresponding ports from your controller to the robot component
connectStandardPorts(getRobotName(), "lwr_rtt_control", ConnPolicy())

configureComponent("lwr_rtt_control")

startComponent("lwr_rtt_control")

#print.ln("\n\n\x1B[32mYou can change the robot control modes using the krl_tool\x1B[0m\n")

