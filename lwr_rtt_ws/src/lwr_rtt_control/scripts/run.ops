import("rtt_rospack")
# The magic utility script
runScript(ros.find("lwr_utils")+"/scripts/utils.ops")

# Load the robot (<name>, <is sim> ,<start component>)
loadRobot(getRobotName(),isSim(),true)

# Start the state publisher (<start component>)
loadStatePublisher(true)

# Load and start the controller
import("rtt_ros")

# This will load all the dependencies in packages.xml <export><rtt_ros>
ros.import("lwr_rtt_control")

loadComponent("lwr_rtt_control","LwrRttControl")
setActivity("lwr_rtt_control",0.001,LowestPriority,ORO_SCHED_RT)

connectPeers("lwr_rtt_control",getRobotName())

configureComponent("lwr_rtt_control")

# Connects corresponding ports from your controller to the robot component
connectStandardPorts(getRobotName(),"lwr_rtt_control",ConnPolicy())

startComponent("lwr_rtt_control")

print.ln("\n\n\x1B[32mYou can change the robot control modes using the krl_tool\x1B[0m\n")

# On the real robot, you have to set the mode manually
# In simulation, JointImpedance is selected by default at the end of the loadRobot()

#setJointImpedanceControlMode()
#setJointTorqueControlMode()
#setJointPositionControlMode()
